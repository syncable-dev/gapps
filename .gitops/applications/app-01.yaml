apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: customer-3890fc7e918f417331ecfa75716b95b087760c245ba66adf95
  labels: &a1
    app.kubernetes.io/name: api
    app.kubernetes.io/instance: 3890fc7e-api
    app.kubernetes.io/version: 0ab1ddb
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: 3890fc7e918f417331ecfa75716b95b087760c245ba66adf95
    app.kubernetes.io/managed-by: syncable
    syncable.dev/customer-id: U8TnFI7z1NHnF6ZhQ2TZtTLidSxUkjso
    syncable.dev/project-id: f8987309-3069-4580-91c8-89b885249c57
    environment: production
  annotations: &a2
    backstage.io/kubernetes-id: api
    syncable.dev/image-digest: sha256:ae15ab9159ee4ec148de85059012b605ad79efe456af2495ee84229118d72836
    syncable.dev/generated-by: backstage-scaffolder
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: api
      app.kubernetes.io/instance: U8TnFI7z1NHnF6ZhQ2TZtTLidSxUkjso-api
  template:
    metadata:
      labels: *a1
      annotations: *a2
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 10000
        fsGroup: 10000
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: api
          image: europe-docker.pkg.dev/syncable-461014/syncable-customer-images/customers/u8tnfi7z1nhnf6zhq2tzttlidsxukjso-df7f4cf7/f8987309-3069-4580-91c8-89b885249c57-c5528d1c-api:0ab1ddb
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8079
              protocol: TCP
          env:
            - name: NODE_ENV
              valueFrom:
                configMapKeyRef:
                  name: api-config
                  key: NODE_ENV
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: api-config
                  key: LOG_LEVEL
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  name: api-config
                  key: PORT
            - name: HOST_NAME
              valueFrom:
                configMapKeyRef:
                  name: api-config
                  key: HOST_NAME
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 512Mi
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8079
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: 8079
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10000
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
          volumeMounts:
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: tmp
          emptyDir: {}
      terminationGracePeriodSeconds: 30
